import{_ as s,c as n,o as a,a as l}from"./app.547186f3.js";const d=JSON.parse('{"title":"\u4F7F\u7528\u7F16\u7A0B\u8BED\u8A00\u5BA2\u6237\u7AEF\u64CD\u4F5C Redis","description":"","frontmatter":{},"headers":[{"level":2,"title":"Redis \u652F\u6301\u7684\u7A0B\u5E8F\u5BA2\u6237\u7AEF","slug":"redis-\u652F\u6301\u7684\u7A0B\u5E8F\u5BA2\u6237\u7AEF","link":"#redis-\u652F\u6301\u7684\u7A0B\u5E8F\u5BA2\u6237\u7AEF","children":[]},{"level":2,"title":"\u5728 Node.js \u4E2D\u64CD\u4F5C Redis","slug":"\u5728-node-js-\u4E2D\u64CD\u4F5C-redis","link":"#\u5728-node-js-\u4E2D\u64CD\u4F5C-redis","children":[]},{"level":2,"title":"\u57FA\u672C\u4F7F\u7528","slug":"\u57FA\u672C\u4F7F\u7528","link":"#\u57FA\u672C\u4F7F\u7528","children":[]},{"level":2,"title":"Pipelining","slug":"pipelining","link":"#pipelining","children":[]},{"level":2,"title":"\u4E8B\u52A1","slug":"\u4E8B\u52A1","link":"#\u4E8B\u52A1","children":[]},{"level":2,"title":"\u9519\u8BEF\u5904\u7406","slug":"\u9519\u8BEF\u5904\u7406","link":"#\u9519\u8BEF\u5904\u7406","children":[]},{"level":2,"title":"\u7EFC\u5408\u6848\u4F8B","slug":"\u7EFC\u5408\u6848\u4F8B","link":"#\u7EFC\u5408\u6848\u4F8B","children":[]}],"relativePath":"FullStack/Redis/Client.md"}'),p={name:"FullStack/Redis/Client.md"},o=l(`<h1 id="\u4F7F\u7528\u7F16\u7A0B\u8BED\u8A00\u5BA2\u6237\u7AEF\u64CD\u4F5C-redis" tabindex="-1">\u4F7F\u7528\u7F16\u7A0B\u8BED\u8A00\u5BA2\u6237\u7AEF\u64CD\u4F5C Redis <a class="header-anchor" href="#\u4F7F\u7528\u7F16\u7A0B\u8BED\u8A00\u5BA2\u6237\u7AEF\u64CD\u4F5C-redis" aria-hidden="true">#</a></h1><p>\u5728\u6B64\u4E4B\u524D\u6211\u4EEC\u8FDB\u884C\u7684\u64CD\u4F5C\u90FD\u662F\u901A\u8FC7 Redis \u7684\u547D\u4EE4\u884C\u5BA2\u6237\u7AEF redis-cli \u8FDB\u884C\u7684\uFF0C\u5E76\u6CA1\u4E0E\u4ECB\u7ECD\u5B9E\u9645\u7F16\u7A0B\u65F6\u5982\u4F55\u64CD\u4F5C Redis\u3002\u63A5\u4E0B\u6765\u4E3B\u8981\u4F1A\u8BB2\u89E3\u5982\u4F55\u901A\u8FC7\u5177\u4F53\u7684\u7F16\u7A0B\u8BED\u8A00\u6765\u64CD\u4F5C Redis\u3002</p><h2 id="redis-\u652F\u6301\u7684\u7A0B\u5E8F\u5BA2\u6237\u7AEF" tabindex="-1">Redis \u652F\u6301\u7684\u7A0B\u5E8F\u5BA2\u6237\u7AEF <a class="header-anchor" href="#redis-\u652F\u6301\u7684\u7A0B\u5E8F\u5BA2\u6237\u7AEF" aria-hidden="true">#</a></h2><p>\u53C2\u8003\u5B98\u65B9\u652F\u6301\u5217\u8868\uFF1A<a href="https://redis.io/clients%E3%80%82" target="_blank" rel="noreferrer">https://redis.io/clients\u3002</a></p><h2 id="\u5728-node-js-\u4E2D\u64CD\u4F5C-redis" tabindex="-1">\u5728 Node.js \u4E2D\u64CD\u4F5C Redis <a class="header-anchor" href="#\u5728-node-js-\u4E2D\u64CD\u4F5C-redis" aria-hidden="true">#</a></h2><p>Node.js \u4E2D\u53EF\u4EE5\u64CD\u4F5C Redis \u7684\u8F6F\u4EF6\u5305\u63A8\u8350\u5217\u8868\uFF1A<a href="https://redis.io/clients#nodejs%E3%80%82" target="_blank" rel="noreferrer">https://redis.io/clients#nodejs\u3002</a> \u63A8\u8350\u4E0B\u9762\u4E24\u4E2A\uFF1A</p><ul><li><a href="https://github.com/NodeRedis/node-redis" target="_blank" rel="noreferrer">https://github.com/NodeRedis/node-redis</a></li><li><a href="https://github.com/luin/ioredis" target="_blank" rel="noreferrer">https://github.com/luin/ioredis</a></li></ul><p>\u8FD9\u91CC\u6211\u4E3B\u8981\u4EE5 ioredis \u4E3A\u4F8B\u3002</p><p>ioredis \u662F\u529F\u80FD\u5F3A\u5927\u7684 Redis \u5BA2\u6237\u7AEF\uFF0C\u5DF2\u88AB\u4E16\u754C\u4E0A\u6700\u5927\u7684\u5728\u7EBF\u5546\u52A1\u516C\u53F8\u963F\u91CC\u5DF4\u5DF4\u548C\u8BB8\u591A\u5176\u4ED6\u4E86\u4E0D\u8D77\u7684\u516C\u53F8\u6240\u4F7F\u7528\u3002</p><p>ioredis \u7279\u70B9\uFF1A</p><ul><li>\u529F\u80FD\u9F50\u5168\u3002\u5B83\u652F\u6301\u96C6\u7FA4\uFF0C\u524D\u54E8\uFF0C\u6D41\uFF0C\u6D41\u6C34\u7EBF\uFF0C\u5F53\u7136\u8FD8\u652F\u6301Lua\u811A\u672C\u548C\u53D1\u5E03/\u8BA2\u9605\uFF08\u5177\u6709\u4E8C\u8FDB\u5236\u6D88\u606F\u7684\u652F\u6301\uFF09\u3002</li><li>\u9AD8\u6027\u80FD</li><li>\u4EE4\u4EBA\u6109\u5FEB\u7684 API\u3002\u5B83\u7684\u5F02\u6B65 API \u652F\u6301\u56DE\u8C03\u51FD\u6570\u4E0E Promise</li><li>\u547D\u4EE4\u53C2\u6570\u548C\u8FD4\u56DE\u503C\u7684\u8F6C\u6362</li><li>\u900F\u660E\u952E\u524D\u7F00</li><li>Lua\u811A\u672C\u7684\u62BD\u8C61\uFF0C\u5141\u8BB8\u60A8\u5B9A\u4E49\u81EA\u5B9A\u4E49\u547D\u4EE4\u3002</li><li>\u652F\u6301\u4E8C\u8FDB\u5236\u6570\u636E</li><li>\u652F\u6301 TLS</li><li>\u652F\u6301\u8131\u673A\u961F\u5217\u548C\u5C31\u7EEA\u68C0\u67E5</li><li>\u652F\u6301ES6\u7C7B\u578B\uFF0C\u4F8B\u5982 Map \u548C Set</li><li>\u652F\u6301GEO\u547D\u4EE4\uFF08Redis 3.2\u4E0D\u7A33\u5B9A\uFF09</li><li>\u590D\u6742\u7684\u9519\u8BEF\u5904\u7406\u7B56\u7565</li><li>\u652F\u6301NAT\u6620\u5C04</li><li>\u652F\u6301\u81EA\u52A8\u6D41\u6C34\u7EBF \u76F8\u5173\u94FE\u63A5\uFF1A</li><li>API \u53C2\u8003\u6587\u6863\uFF1A<a href="https://github.com/luin/ioredis/blob/master/API.md" target="_blank" rel="noreferrer">https://github.com/luin/ioredis/blob/master/API.md</a></li><li>\u66F4\u65B0\u65E5\u5FD7\uFF1A<a href="https://github.com/luin/ioredis/blob/master/Changelog.md" target="_blank" rel="noreferrer">https://github.com/luin/ioredis/blob/master/Changelog.md</a></li><li>\u4ECE node_redis \u8FC1\u79FB\uFF1A<a href="https://github.com/luin/ioredis/wiki/Migrating-from-node_redis" target="_blank" rel="noreferrer">https://github.com/luin/ioredis/wiki/Migrating-from-node_redis</a></li></ul><h2 id="\u57FA\u672C\u4F7F\u7528" tabindex="-1">\u57FA\u672C\u4F7F\u7528 <a class="header-anchor" href="#\u57FA\u672C\u4F7F\u7528" aria-hidden="true">#</a></h2><p>\u5B89\u88C5\u4F9D\u8D56\uFF1A</p><div class="language-Shell"><button title="Copy Code" class="copy"></button><span class="lang">Shell</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#DBD7CAEE;">npm install ioredis</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#393A34;">npm install ioredis</span></span>
<span class="line"></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Redis</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">require</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">ioredis</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">redis</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">new</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">Redis</span><span style="color:#666666;">();</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// uses defaults unless given configuration object</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// ioredis supports all Redis commands:</span></span>
<span class="line"><span style="color:#BD976A;">redis</span><span style="color:#666666;">.</span><span style="color:#80A665;">set</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">foo</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">bar</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">);</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// returns promise which resolves to string, &quot;OK&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// the format is: redis[SOME_REDIS_COMMAND_IN_LOWERCASE](ARGUMENTS_ARE_JOINED_INTO_COMMAND_STRING)</span></span>
<span class="line"><span style="color:#758575DD;">// the js: \` redis.set(&quot;mykey&quot;, &quot;Hello&quot;) \` is equivalent to the cli: \` redis&gt; SET mykey &quot;Hello&quot; \`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// ioredis supports the node.js callback style</span></span>
<span class="line"><span style="color:#BD976A;">redis</span><span style="color:#666666;">.</span><span style="color:#80A665;">get</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">foo</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">err</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">result</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">err</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">error</span><span style="color:#666666;">(</span><span style="color:#BD976A;">err</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">else</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#BD976A;">result</span><span style="color:#666666;">);</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// Promise resolves to &quot;bar&quot;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#666666;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// Or ioredis returns a promise if the last argument isn&#39;t a function</span></span>
<span class="line"><span style="color:#BD976A;">redis</span><span style="color:#666666;">.</span><span style="color:#80A665;">get</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">foo</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">).</span><span style="color:#80A665;">then</span><span style="color:#666666;">(</span><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">result</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#BD976A;">result</span><span style="color:#666666;">);</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// Prints &quot;bar&quot;</span></span>
<span class="line"><span style="color:#666666;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// Most responses are strings, or arrays of strings</span></span>
<span class="line"><span style="color:#BD976A;">redis</span><span style="color:#666666;">.</span><span style="color:#80A665;">zadd</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">sortedSet</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">one</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">2</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">dos</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">4</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">quatro</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">3</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">three</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#BD976A;">redis</span><span style="color:#666666;">.</span><span style="color:#80A665;">zrange</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">sortedSet</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">0</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">2</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">WITHSCORES</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">).</span><span style="color:#80A665;">then</span><span style="color:#666666;">((</span><span style="color:#BD976A;">res</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#BD976A;">res</span><span style="color:#666666;">));</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// Promise resolves to [&quot;one&quot;, &quot;1&quot;, &quot;dos&quot;, &quot;2&quot;, &quot;three&quot;, &quot;3&quot;] as if the command was \` redis&gt; ZRANGE sortedSet 0 2 WITHSCORES \`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// All arguments are passed directly to the redis server:</span></span>
<span class="line"><span style="color:#BD976A;">redis</span><span style="color:#666666;">.</span><span style="color:#80A665;">set</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">key</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">100</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">EX</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">10</span><span style="color:#666666;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Redis</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">require</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">ioredis</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">redis</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#59873A;">Redis</span><span style="color:#999999;">();</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// uses defaults unless given configuration object</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// ioredis supports all Redis commands:</span></span>
<span class="line"><span style="color:#B07D48;">redis</span><span style="color:#999999;">.</span><span style="color:#59873A;">set</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">foo</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">bar</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">);</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// returns promise which resolves to string, &quot;OK&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// the format is: redis[SOME_REDIS_COMMAND_IN_LOWERCASE](ARGUMENTS_ARE_JOINED_INTO_COMMAND_STRING)</span></span>
<span class="line"><span style="color:#A0ADA0;">// the js: \` redis.set(&quot;mykey&quot;, &quot;Hello&quot;) \` is equivalent to the cli: \` redis&gt; SET mykey &quot;Hello&quot; \`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// ioredis supports the node.js callback style</span></span>
<span class="line"><span style="color:#B07D48;">redis</span><span style="color:#999999;">.</span><span style="color:#59873A;">get</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">foo</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">err</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">result</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">err</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">error</span><span style="color:#999999;">(</span><span style="color:#B07D48;">err</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">else</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B07D48;">result</span><span style="color:#999999;">);</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// Promise resolves to &quot;bar&quot;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// Or ioredis returns a promise if the last argument isn&#39;t a function</span></span>
<span class="line"><span style="color:#B07D48;">redis</span><span style="color:#999999;">.</span><span style="color:#59873A;">get</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">foo</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">).</span><span style="color:#59873A;">then</span><span style="color:#999999;">(</span><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">result</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B07D48;">result</span><span style="color:#999999;">);</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// Prints &quot;bar&quot;</span></span>
<span class="line"><span style="color:#999999;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// Most responses are strings, or arrays of strings</span></span>
<span class="line"><span style="color:#B07D48;">redis</span><span style="color:#999999;">.</span><span style="color:#59873A;">zadd</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">sortedSet</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">1</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">one</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">2</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">dos</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">4</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">quatro</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">3</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">three</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#B07D48;">redis</span><span style="color:#999999;">.</span><span style="color:#59873A;">zrange</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">sortedSet</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">0</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">2</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">WITHSCORES</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">).</span><span style="color:#59873A;">then</span><span style="color:#999999;">((</span><span style="color:#B07D48;">res</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B07D48;">res</span><span style="color:#999999;">));</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// Promise resolves to [&quot;one&quot;, &quot;1&quot;, &quot;dos&quot;, &quot;2&quot;, &quot;three&quot;, &quot;3&quot;] as if the command was \` redis&gt; ZRANGE sortedSet 0 2 WITHSCORES \`</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// All arguments are passed directly to the redis server:</span></span>
<span class="line"><span style="color:#B07D48;">redis</span><span style="color:#999999;">.</span><span style="color:#59873A;">set</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">key</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">100</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">EX</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">10</span><span style="color:#999999;">);</span></span>
<span class="line"></span></code></pre></div><p>\u6709\u5173\u66F4\u591A\u5B9E\u4F8B\uFF0C\u53EF\u4EE5\u53C2\u8003\u8FD9\u91CC\uFF1A<a href="https://github.com/luin/ioredis/tree/master/examples%E3%80%82" target="_blank" rel="noreferrer">https://github.com/luin/ioredis/tree/master/examples\u3002</a></p><h2 id="pipelining" tabindex="-1">Pipelining <a class="header-anchor" href="#pipelining" aria-hidden="true">#</a></h2><p>\u5982\u679C\u8981\u53D1\u9001\u4E00\u6279\u547D\u4EE4\uFF08\u4F8B\u5982&gt; 5\uFF09\uFF0C\u5219\u53EF\u4EE5\u4F7F\u7528\u6D41\u6C34\u7EBF\u5C06\u547D\u4EE4\u5728\u5185\u5B58\u4E2D\u6392\u961F\uFF0C\u7136\u540E\u5C06\u5B83\u4EEC\u4E00\u6B21\u5168\u90E8\u53D1\u9001\u5230 Redis\u3002\u8FD9\u6837\uFF0C\u6027\u80FD\u63D0\u9AD8\u4E8650\uFF05\u301C300\uFF05\uFF08\u8BF7\u53C2\u9605\u57FA\u51C6\u6D4B\u8BD5\u90E8\u5206\uFF09\u3002</p><p>redis.pipeline() \u521B\u5EFA\u4E00\u4E2A Pipeline \u5B9E\u4F8B\u3002\u60A8\u53EF\u4EE5\u50CF Redis \u5B9E\u4F8B\u4E00\u6837\u5728\u5176\u4E0A\u8C03\u7528\u4EFB\u4F55 Redis \u547D\u4EE4\u3002\u8FD9\u4E9B\u547D\u4EE4\u5728\u5185\u5B58\u4E2D\u6392\u961F\uFF0C\u5E76\u901A\u8FC7\u8C03\u7528 exec \u65B9\u6CD5\u5237\u65B0\u5230 Redis\uFF1A</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">pipeline</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">redis</span><span style="color:#666666;">.</span><span style="color:#80A665;">pipeline</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#BD976A;">pipeline</span><span style="color:#666666;">.</span><span style="color:#80A665;">set</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">foo</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">bar</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#BD976A;">pipeline</span><span style="color:#666666;">.</span><span style="color:#80A665;">del</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">cc</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#BD976A;">pipeline</span><span style="color:#666666;">.</span><span style="color:#80A665;">exec</span><span style="color:#666666;">((</span><span style="color:#BD976A;">err</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">results</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// \`err\` is always null, and \`results\` is an array of responses</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// corresponding to the sequence of queued commands.</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// Each response follows the format \`[err, result]\`.</span></span>
<span class="line"><span style="color:#666666;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// You can even chain the commands:</span></span>
<span class="line"><span style="color:#BD976A;">redis</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">pipeline</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">set</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">foo</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">bar</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">del</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">cc</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">exec</span><span style="color:#666666;">((</span><span style="color:#BD976A;">err</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">results</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// \`exec\` also returns a Promise:</span></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">promise</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">redis</span><span style="color:#666666;">.</span><span style="color:#80A665;">pipeline</span><span style="color:#666666;">().</span><span style="color:#80A665;">set</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">foo</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">bar</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">).</span><span style="color:#80A665;">get</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">foo</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">).</span><span style="color:#80A665;">exec</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#BD976A;">promise</span><span style="color:#666666;">.</span><span style="color:#80A665;">then</span><span style="color:#666666;">((</span><span style="color:#BD976A;">result</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// result === [[null, &#39;OK&#39;], [null, &#39;bar&#39;]]</span></span>
<span class="line"><span style="color:#666666;">});</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">pipeline</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">redis</span><span style="color:#999999;">.</span><span style="color:#59873A;">pipeline</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#B07D48;">pipeline</span><span style="color:#999999;">.</span><span style="color:#59873A;">set</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">foo</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">bar</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#B07D48;">pipeline</span><span style="color:#999999;">.</span><span style="color:#59873A;">del</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">cc</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#B07D48;">pipeline</span><span style="color:#999999;">.</span><span style="color:#59873A;">exec</span><span style="color:#999999;">((</span><span style="color:#B07D48;">err</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">results</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// \`err\` is always null, and \`results\` is an array of responses</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// corresponding to the sequence of queued commands.</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// Each response follows the format \`[err, result]\`.</span></span>
<span class="line"><span style="color:#999999;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// You can even chain the commands:</span></span>
<span class="line"><span style="color:#B07D48;">redis</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">pipeline</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">set</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">foo</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">bar</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">del</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">cc</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">exec</span><span style="color:#999999;">((</span><span style="color:#B07D48;">err</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">results</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// \`exec\` also returns a Promise:</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">promise</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">redis</span><span style="color:#999999;">.</span><span style="color:#59873A;">pipeline</span><span style="color:#999999;">().</span><span style="color:#59873A;">set</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">foo</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">bar</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">).</span><span style="color:#59873A;">get</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">foo</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">).</span><span style="color:#59873A;">exec</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#B07D48;">promise</span><span style="color:#999999;">.</span><span style="color:#59873A;">then</span><span style="color:#999999;">((</span><span style="color:#B07D48;">result</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// result === [[null, &#39;OK&#39;], [null, &#39;bar&#39;]]</span></span>
<span class="line"><span style="color:#999999;">});</span></span>
<span class="line"></span></code></pre></div><p>\u6BCF\u4E2A\u94FE\u63A5\u7684\u547D\u4EE4\u8FD8\u53EF\u4EE5\u5177\u6709\u4E00\u4E2A\u56DE\u8C03\uFF0C\u8BE5\u56DE\u8C03\u5C06\u5728\u547D\u4EE4\u5F97\u5230\u7B54\u590D\u65F6\u88AB\u8C03\u7528\uFF1A</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#BD976A;">redis</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">pipeline</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">set</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">foo</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">bar</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">get</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">foo</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">err</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">result</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">// result === &#39;bar&#39;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">exec</span><span style="color:#666666;">((</span><span style="color:#BD976A;">err</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">result</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">// result[1][1] === &#39;bar&#39;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">});</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#B07D48;">redis</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">pipeline</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">set</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">foo</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">bar</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">get</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">foo</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">err</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">result</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// result === &#39;bar&#39;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">exec</span><span style="color:#999999;">((</span><span style="color:#B07D48;">err</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">result</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// result[1][1] === &#39;bar&#39;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">});</span></span>
<span class="line"></span></code></pre></div><p>\u9664\u4E86\u5C06\u547D\u4EE4\u5206\u522B\u6DFB\u52A0\u5230\u7BA1\u9053\u961F\u5217\u4E4B\u5916\uFF0C\u60A8\u8FD8\u53EF\u4EE5\u5C06\u547D\u4EE4\u548C\u53C2\u6570\u6570\u7EC4\u4F20\u9012\u7ED9\u6784\u9020\u51FD\u6570\uFF1A</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#BD976A;">redis</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">pipeline</span><span style="color:#666666;">([</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">[</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">set</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">foo</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">bar</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">],</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">[</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">get</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">foo</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">],</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">])</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">exec</span><span style="color:#666666;">(()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#758575DD;">/* ... */</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">});</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#B07D48;">redis</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">pipeline</span><span style="color:#999999;">([</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">[</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">set</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">foo</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">bar</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">],</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">[</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">get</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">foo</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">],</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">])</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">exec</span><span style="color:#999999;">(()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#A0ADA0;">/* ... */</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">});</span></span>
<span class="line"></span></code></pre></div><p>#length \u5C5E\u6027\u663E\u793A\u7BA1\u9053\u4E2D\u6709\u591A\u5C11\u4E2A\u547D\u4EE4\uFF1A</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">length</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">redis</span><span style="color:#666666;">.</span><span style="color:#80A665;">pipeline</span><span style="color:#666666;">().</span><span style="color:#80A665;">set</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">foo</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">bar</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">).</span><span style="color:#80A665;">get</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">foo</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">).</span><span style="color:#B8A965;">length</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#758575DD;">// length === 2</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">length</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">redis</span><span style="color:#999999;">.</span><span style="color:#59873A;">pipeline</span><span style="color:#999999;">().</span><span style="color:#59873A;">set</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">foo</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">bar</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">).</span><span style="color:#59873A;">get</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">foo</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">).</span><span style="color:#998418;">length</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#A0ADA0;">// length === 2</span></span>
<span class="line"></span></code></pre></div><h2 id="\u4E8B\u52A1" tabindex="-1">\u4E8B\u52A1 <a class="header-anchor" href="#\u4E8B\u52A1" aria-hidden="true">#</a></h2><p>\u5927\u591A\u6570\u65F6\u5019\uFF0C\u4E8B\u52A1\u547D\u4EE4 multi\uFF06exec \u4E0E\u7BA1\u9053\u4E00\u8D77\u4F7F\u7528\u3002\u56E0\u6B64\uFF0C\u5728\u8C03\u7528 multi \u65F6\uFF0C\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u4F1A\u81EA\u52A8\u521B\u5EFA Pipeline \u5B9E\u4F8B\uFF0C\u56E0\u6B64\u60A8\u53EF\u4EE5\u50CF\u4F7F\u7528\u7BA1\u9053\u4E00\u6837\u4F7F\u7528 multi\uFF1A</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#BD976A;">redis</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">multi</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">set</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">foo</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">bar</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">get</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">foo</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">exec</span><span style="color:#666666;">((</span><span style="color:#BD976A;">err</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">results</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">// results === [[null, &#39;OK&#39;], [null, &#39;bar&#39;]]</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">});</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#B07D48;">redis</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">multi</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">set</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">foo</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">bar</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">get</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">foo</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">exec</span><span style="color:#999999;">((</span><span style="color:#B07D48;">err</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">results</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// results === [[null, &#39;OK&#39;], [null, &#39;bar&#39;]]</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">});</span></span>
<span class="line"></span></code></pre></div><p>\u5982\u679C\u4E8B\u52A1\u7684\u547D\u4EE4\u94FE\u4E2D\u5B58\u5728\u8BED\u6CD5\u9519\u8BEF\uFF08\u4F8B\u5982\uFF0C\u9519\u8BEF\u7684\u53C2\u6570\u6570\u91CF\uFF0C\u9519\u8BEF\u7684\u547D\u4EE4\u540D\u79F0\u7B49\uFF09\uFF0C\u5219\u4E0D\u4F1A\u6267\u884C\u4EFB\u4F55\u547D\u4EE4\uFF0C\u5E76\u8FD4\u56DE\u9519\u8BEF\uFF1A</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#BD976A;">redis</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">multi</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">set</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">foo</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">set</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">foo</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">new value</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">exec</span><span style="color:#666666;">((</span><span style="color:#BD976A;">err</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">results</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">// err:</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">//  { [ReplyError: EXECABORT Transaction discarded because of previous errors.]</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">//    name: &#39;ReplyError&#39;,</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">//    message: &#39;EXECABORT Transaction discarded because of previous errors.&#39;,</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">//    command: { name: &#39;exec&#39;, args: [] },</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">//    previousErrors:</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">//     [ { [ReplyError: ERR wrong number of arguments for &#39;set&#39; command]</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">//         name: &#39;ReplyError&#39;,</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">//         message: &#39;ERR wrong number of arguments for \\&#39;set\\&#39; command&#39;,</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">//         command: [Object] } ] }</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">});</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#B07D48;">redis</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">multi</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">set</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">foo</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">set</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">foo</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">new value</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">exec</span><span style="color:#999999;">((</span><span style="color:#B07D48;">err</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">results</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// err:</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">//  { [ReplyError: EXECABORT Transaction discarded because of previous errors.]</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">//    name: &#39;ReplyError&#39;,</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">//    message: &#39;EXECABORT Transaction discarded because of previous errors.&#39;,</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">//    command: { name: &#39;exec&#39;, args: [] },</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">//    previousErrors:</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">//     [ { [ReplyError: ERR wrong number of arguments for &#39;set&#39; command]</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">//         name: &#39;ReplyError&#39;,</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">//         message: &#39;ERR wrong number of arguments for \\&#39;set\\&#39; command&#39;,</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">//         command: [Object] } ] }</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">});</span></span>
<span class="line"></span></code></pre></div><p>\u5C31\u63A5\u53E3\u800C\u8A00\uFF0Cmulti \u4E0E\u7BA1\u9053\u7684\u533A\u522B\u5728\u4E8E\uFF0C\u5F53\u4E3A\u6BCF\u4E2A\u94FE\u63A5\u7684\u547D\u4EE4\u6307\u5B9A\u56DE\u8C03\u65F6\uFF0C\u6392\u961F\u72B6\u6001\u5C06\u4F20\u9012\u7ED9\u56DE\u8C03\uFF0C\u800C\u4E0D\u662F\u547D\u4EE4\u7684\u7ED3\u679C\uFF1A</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#BD976A;">redis</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">multi</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">set</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">foo</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">bar</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">err</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">result</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">// result === &#39;QUEUED&#39;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">exec</span><span style="color:#666666;">(</span><span style="color:#758575DD;">/* ... */</span><span style="color:#666666;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#B07D48;">redis</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">multi</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">set</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">foo</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">bar</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">err</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">result</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// result === &#39;QUEUED&#39;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">exec</span><span style="color:#999999;">(</span><span style="color:#A0ADA0;">/* ... */</span><span style="color:#999999;">);</span></span>
<span class="line"></span></code></pre></div><p>\u5982\u679C\u8981\u4F7F\u7528\u4E0D\u5E26\u7BA1\u9053\u7684\u4E8B\u52A1\uFF0C\u8BF7\u5C06 { pipeline: false } \u4F20\u9012\u7ED9 multi\uFF0C\u6BCF\u4E2A\u547D\u4EE4\u5C06\u7ACB\u5373\u53D1\u9001\u5230 Redis\uFF0C\u800C\u65E0\u9700\u7B49\u5F85 exec \u8C03\u7528\uFF1A</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#BD976A;">redis</span><span style="color:#666666;">.</span><span style="color:#80A665;">multi</span><span style="color:#666666;">({</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">pipeline</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">false</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">});</span></span>
<span class="line"><span style="color:#BD976A;">redis</span><span style="color:#666666;">.</span><span style="color:#80A665;">set</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">foo</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">bar</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#BD976A;">redis</span><span style="color:#666666;">.</span><span style="color:#80A665;">get</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">foo</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#BD976A;">redis</span><span style="color:#666666;">.</span><span style="color:#80A665;">exec</span><span style="color:#666666;">((</span><span style="color:#BD976A;">err</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">result</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// result === [[null, &#39;OK&#39;], [null, &#39;bar&#39;]]</span></span>
<span class="line"><span style="color:#666666;">});</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#B07D48;">redis</span><span style="color:#999999;">.</span><span style="color:#59873A;">multi</span><span style="color:#999999;">({</span><span style="color:#393A34;"> </span><span style="color:#998418;">pipeline</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">false</span><span style="color:#393A34;"> </span><span style="color:#999999;">});</span></span>
<span class="line"><span style="color:#B07D48;">redis</span><span style="color:#999999;">.</span><span style="color:#59873A;">set</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">foo</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">bar</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#B07D48;">redis</span><span style="color:#999999;">.</span><span style="color:#59873A;">get</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">foo</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#B07D48;">redis</span><span style="color:#999999;">.</span><span style="color:#59873A;">exec</span><span style="color:#999999;">((</span><span style="color:#B07D48;">err</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">result</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// result === [[null, &#39;OK&#39;], [null, &#39;bar&#39;]]</span></span>
<span class="line"><span style="color:#999999;">});</span></span>
<span class="line"></span></code></pre></div><p>multi \u7684\u6784\u9020\u51FD\u6570\u8FD8\u63A5\u53D7\u4E00\u6279\u547D\u4EE4\uFF1A</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#BD976A;">redis</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">multi</span><span style="color:#666666;">([</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">[</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">set</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">foo</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">bar</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">],</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">[</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">get</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">foo</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">],</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">])</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">exec</span><span style="color:#666666;">(()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#758575DD;">/* ... */</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">});</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#B07D48;">redis</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">multi</span><span style="color:#999999;">([</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">[</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">set</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">foo</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">bar</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">],</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">[</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">get</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">foo</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">],</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">])</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">exec</span><span style="color:#999999;">(()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#A0ADA0;">/* ... */</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">});</span></span>
<span class="line"></span></code></pre></div><p>\u7BA1\u9053\u652F\u6301\u5185\u8054\u4E8B\u52A1\uFF0C\u8FD9\u610F\u5473\u7740\u60A8\u53EF\u4EE5\u5C06\u7BA1\u9053\u4E2D\u7684\u547D\u4EE4\u5B50\u96C6\u5206\u7EC4\u4E3A\u4E00\u4E2A\u4E8B\u52A1\uFF1A</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#BD976A;">redis</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">pipeline</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">get</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">foo</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">multi</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">set</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">foo</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">bar</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">get</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">foo</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">exec</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">get</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">foo</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">.</span><span style="color:#80A665;">exec</span><span style="color:#666666;">();</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#B07D48;">redis</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">pipeline</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">get</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">foo</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">multi</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">set</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">foo</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">bar</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">get</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">foo</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">exec</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">get</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">foo</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">.</span><span style="color:#59873A;">exec</span><span style="color:#999999;">();</span></span>
<span class="line"></span></code></pre></div><h2 id="\u9519\u8BEF\u5904\u7406" tabindex="-1">\u9519\u8BEF\u5904\u7406 <a class="header-anchor" href="#\u9519\u8BEF\u5904\u7406" aria-hidden="true">#</a></h2><p>Redis\u670D\u52A1\u5668\u8FD4\u56DE\u7684\u6240\u6709\u9519\u8BEF\u90FD\u662F ReplyError \u7684\u5B9E\u4F8B\uFF0C\u53EF\u4EE5\u901A\u8FC7 Redis \u8FDB\u884C\u8BBF\u95EE\uFF1A</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Redis</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">require</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">ioredis</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">redis</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">new</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">Redis</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#758575DD;">// This command causes a reply error since the SET command requires two arguments.</span></span>
<span class="line"><span style="color:#BD976A;">redis</span><span style="color:#666666;">.</span><span style="color:#80A665;">set</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">foo</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">err</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">err</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">instanceof</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA9A7;">Redis</span><span style="color:#666666;">.</span><span style="color:#5DA9A7;">ReplyError</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">});</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Redis</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">require</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">ioredis</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">redis</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#59873A;">Redis</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#A0ADA0;">// This command causes a reply error since the SET command requires two arguments.</span></span>
<span class="line"><span style="color:#B07D48;">redis</span><span style="color:#999999;">.</span><span style="color:#59873A;">set</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">foo</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">err</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">err</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">instanceof</span><span style="color:#393A34;"> </span><span style="color:#2E808F;">Redis</span><span style="color:#999999;">.</span><span style="color:#2E808F;">ReplyError</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">});</span></span>
<span class="line"></span></code></pre></div><p>\u8FD9\u662F ReplyError \u7684\u9519\u8BEF\u5806\u6808\uFF1A</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#dbd7caee;">ReplyError: ERR wrong number of arguments for &#39;set&#39; command</span></span>
<span class="line"><span style="color:#dbd7caee;">    at ReplyParser._parseResult (/app/node_modules/ioredis/lib/parsers/javascript.js:60:14)</span></span>
<span class="line"><span style="color:#dbd7caee;">    at ReplyParser.execute (/app/node_modules/ioredis/lib/parsers/javascript.js:178:20)</span></span>
<span class="line"><span style="color:#dbd7caee;">    at Socket.&lt;anonymous&gt; (/app/node_modules/ioredis/lib/redis/event_handler.js:99:22)</span></span>
<span class="line"><span style="color:#dbd7caee;">    at Socket.emit (events.js:97:17)</span></span>
<span class="line"><span style="color:#dbd7caee;">    at readableAddChunk (_stream_readable.js:143:16)</span></span>
<span class="line"><span style="color:#dbd7caee;">    at Socket.Readable.push (_stream_readable.js:106:10)</span></span>
<span class="line"><span style="color:#dbd7caee;">    at TCP.onread (net.js:509:20)</span></span>
<span class="line"><span style="color:#dbd7caee;"></span></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#393a34;">ReplyError: ERR wrong number of arguments for &#39;set&#39; command</span></span>
<span class="line"><span style="color:#393a34;">    at ReplyParser._parseResult (/app/node_modules/ioredis/lib/parsers/javascript.js:60:14)</span></span>
<span class="line"><span style="color:#393a34;">    at ReplyParser.execute (/app/node_modules/ioredis/lib/parsers/javascript.js:178:20)</span></span>
<span class="line"><span style="color:#393a34;">    at Socket.&lt;anonymous&gt; (/app/node_modules/ioredis/lib/redis/event_handler.js:99:22)</span></span>
<span class="line"><span style="color:#393a34;">    at Socket.emit (events.js:97:17)</span></span>
<span class="line"><span style="color:#393a34;">    at readableAddChunk (_stream_readable.js:143:16)</span></span>
<span class="line"><span style="color:#393a34;">    at Socket.Readable.push (_stream_readable.js:106:10)</span></span>
<span class="line"><span style="color:#393a34;">    at TCP.onread (net.js:509:20)</span></span>
<span class="line"><span style="color:#393a34;"></span></span></code></pre></div><p>\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u9519\u8BEF\u5806\u6808\u6CA1\u6709\u4EFB\u4F55\u610F\u4E49\uFF0C\u56E0\u4E3A\u6574\u4E2A\u5806\u6808\u90FD\u53D1\u751F\u5728 ioredis \u6A21\u5757\u672C\u8EAB\u800C\u4E0D\u662F\u4EE3\u7801\u4E2D\u3002\u56E0\u6B64\uFF0C\u8981\u627E\u51FA\u9519\u8BEF\u5728\u4EE3\u7801\u4E2D\u7684\u4F4D\u7F6E\u5E76\u4E0D\u5BB9\u6613\u3002 ioredis \u63D0\u4F9B\u4E86\u4E00\u4E2A\u9009\u9879 showFriendlyErrorStack \u6765\u89E3\u51B3\u8BE5\u95EE\u9898\u3002\u542F\u7528 showFriendlyErrorStack \u65F6\uFF0Cioredis \u5C06\u4E3A\u60A8\u4F18\u5316\u9519\u8BEF\u5806\u6808\uFF1A</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Redis</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">require</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">ioredis</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">redis</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">new</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">Redis</span><span style="color:#666666;">({</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">showFriendlyErrorStack</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">true</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">});</span></span>
<span class="line"><span style="color:#BD976A;">redis</span><span style="color:#666666;">.</span><span style="color:#80A665;">set</span><span style="color:#666666;">(</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#C98A7D;">foo</span><span style="color:#C98A7DAA;">&quot;</span><span style="color:#666666;">);</span></span>
<span class="line"></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Redis</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">require</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">ioredis</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">redis</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#59873A;">Redis</span><span style="color:#999999;">({</span><span style="color:#393A34;"> </span><span style="color:#998418;">showFriendlyErrorStack</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">true</span><span style="color:#393A34;"> </span><span style="color:#999999;">});</span></span>
<span class="line"><span style="color:#B07D48;">redis</span><span style="color:#999999;">.</span><span style="color:#59873A;">set</span><span style="color:#999999;">(</span><span style="color:#B56959AA;">&quot;</span><span style="color:#B56959;">foo</span><span style="color:#B56959AA;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"></span></code></pre></div><p>\u8F93\u51FA\u5C06\u662F\uFF1A</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki vp-code-dark"><code><span class="line"><span style="color:#dbd7caee;">ReplyError: ERR wrong number of arguments for &#39;set&#39; command</span></span>
<span class="line"><span style="color:#dbd7caee;">    at Object.&lt;anonymous&gt; (/app/index.js:3:7)</span></span>
<span class="line"><span style="color:#dbd7caee;">    at Module._compile (module.js:446:26)</span></span>
<span class="line"><span style="color:#dbd7caee;">    at Object.Module._extensions..js (module.js:464:10)</span></span>
<span class="line"><span style="color:#dbd7caee;">    at Module.load (module.js:341:32)</span></span>
<span class="line"><span style="color:#dbd7caee;">    at Function.Module._load (module.js:296:12)</span></span>
<span class="line"><span style="color:#dbd7caee;">    at Function.Module.runMain (module.js:487:10)</span></span>
<span class="line"><span style="color:#dbd7caee;">    at startup (node.js:111:16)</span></span>
<span class="line"><span style="color:#dbd7caee;">    at node.js:799:3</span></span>
<span class="line"><span style="color:#dbd7caee;"></span></span></code></pre><pre class="shiki vp-code-light"><code><span class="line"><span style="color:#393a34;">ReplyError: ERR wrong number of arguments for &#39;set&#39; command</span></span>
<span class="line"><span style="color:#393a34;">    at Object.&lt;anonymous&gt; (/app/index.js:3:7)</span></span>
<span class="line"><span style="color:#393a34;">    at Module._compile (module.js:446:26)</span></span>
<span class="line"><span style="color:#393a34;">    at Object.Module._extensions..js (module.js:464:10)</span></span>
<span class="line"><span style="color:#393a34;">    at Module.load (module.js:341:32)</span></span>
<span class="line"><span style="color:#393a34;">    at Function.Module._load (module.js:296:12)</span></span>
<span class="line"><span style="color:#393a34;">    at Function.Module.runMain (module.js:487:10)</span></span>
<span class="line"><span style="color:#393a34;">    at startup (node.js:111:16)</span></span>
<span class="line"><span style="color:#393a34;">    at node.js:799:3</span></span>
<span class="line"><span style="color:#393a34;"></span></span></code></pre></div><p>\u8FD9\u6B21\uFF0C\u5806\u6808\u544A\u8BC9\u60A8\u9519\u8BEF\u53D1\u751F\u5728\u4EE3\u7801\u7684\u7B2C\u4E09\u884C\u3002</p><p>\u592A\u597D\u4E86\uFF01\u4F46\u662F\uFF0C\u4F18\u5316\u9519\u8BEF\u5806\u6808\u4F1A\u5927\u5927\u964D\u4F4E\u6027\u80FD\u3002\u56E0\u6B64\uFF0C\u9ED8\u8BA4\u60C5\u51B5\u4E0B\uFF0C\u6B64\u9009\u9879\u662F\u7981\u7528\u7684\uFF0C\u53EA\u80FD\u7528\u4E8E\u8C03\u8BD5\u76EE\u7684\u3002\u4E0D\u5EFA\u8BAE\u5728\u751F\u4EA7\u73AF\u5883\u4E2D\u4F7F\u7528\u6B64\u529F\u80FD\u3002</p><h2 id="\u7EFC\u5408\u6848\u4F8B" tabindex="-1">\u7EFC\u5408\u6848\u4F8B <a class="header-anchor" href="#\u7EFC\u5408\u6848\u4F8B" aria-hidden="true">#</a></h2><p><a href="https://github.com/attraction11/drift-bottle" target="_blank" rel="noreferrer">https://github.com/attraction11/drift-bottle</a></p>`,52),e=[o];function t(r,c,y,A,i,D){return a(),n("div",null,e)}const B=s(p,[["render",t]]);export{d as __pageData,B as default};
